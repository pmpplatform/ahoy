{{- define "deployment.app" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .app.name }}
  labels:
    app.kubernetes.io/managed-by: "ahoy"
    app.kubernetes.io/version: {{ .glob.releaseVersion | quote }}
    app.kubernetes.io/release-name: {{ .glob.releaseName | quote }}
    app.kubernetes.io/name: {{ .app.name | quote }}
    app.kubernetes.io/build: {{ .app.version | quote }}
    app.kubernetes.io/instance: {{ .glob.releaseName | quote }}
spec:
  replicas: {{ .app.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .app.name | quote }}
      app.kubernetes.io/instance: {{ .glob.releaseName | quote }}
  template:
    metadata:
      {{- if .app.configFileHashes}}
      annotations:
        ahoy.lsdopen.io/configFileHashes: |
          {{ .app.configFileHashes }}
      {{- end }}
      labels:
        app.kubernetes.io/managed-by: "ahoy"
        app.kubernetes.io/version: {{ .glob.releaseVersion | quote }}
        app.kubernetes.io/release-name: {{ .glob.releaseName | quote }}
        app.kubernetes.io/name: {{ .app.name | quote }}
        app.kubernetes.io/build: {{ .app.version | quote }}
        app.kubernetes.io/instance: {{ .glob.releaseName | quote }}


    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - {{ .app.name | quote }}
              topologyKey: kubernetes.io/hostname
      initContainers:
        - name: agent-container
          image: 'apache/skywalking-java-agent:8.16.0-alpine'
          command:
            - /bin/sh
          args:
            - '-c'
            - >-
              cp -R /skywalking/agent /agent/ && mkdir -p /agent/agent/logs &&
              chmod 777 /agent/agent/logs
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /agent
              name: skywalking-agent
      containers:
        {{- range $containerName, $container := .app.containers }}
        - image: {{ $container.image }}
          imagePullPolicy: Always
          name: {{ $containerName }}
          {{- if $container.commandArgsEnabled }}
          {{- if $container.command }}
          command:
            - {{ $container.command }}
          {{- end }}
          {{- if $container.args }}
          args:
            {{- range $container.args }}
            - {{ . }}
            {{- end}}
          {{- end }}
          {{- end }}
          envFrom:
          - secretRef:
              name: deployment-secrets
          {{- if and $container.environmentVariablesEnabled $container.environmentVariables }}
          env:
            - name: SW_AGENT_COLLECTOR_BACKEND_SERVICES
            {{- if eq $.glob.environment "prod" }}
              value: 'cph2-prod-k8s-000-skywalking-skywalking-helm-oap.skywalking:11800'
            {{ else }}
              value: 'cph2-dev-k8s-000-skywalking-skywalking-helm-oap.skywalking:11800'
            {{- end }}
            - name: PS_ENVIRONMENT
              value: {{ $.glob.environment }}
            - name: SW_AGENT_NAME
              value: {{ printf "%s::%s" $.glob.environment $.app.name }}
            {{- range $name, $envVariable := $container.environmentVariables }}
            {{- if eq $envVariable.type "Value"}}
            - name: {{ $name }}
              value: '{{ $envVariable.value }}'
            {{- end }}
            {{- if eq $envVariable.type "Secret"}}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.app.name }}-{{ $envVariable.secretName }}
                  key: {{ $envVariable.secretKey }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- if and $container.servicePortsEnabled $container.servicePorts }}
          ports:
            {{- range $container.servicePorts }}
            - containerPort: {{ . }}
              protocol: TCP
            {{- end }}
          {{- end }}
          {{- if $container.healthChecksEnabled }}
          livenessProbe:
            {{- if $container.livenessProbe }}
            {{- toYaml $container.livenessProbe | nindent 12 }}
            {{- end }}
          readinessProbe:
            {{- if $container.readinessProbe }}
            {{- toYaml $container.readinessProbe | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if and $container.resourcesEnabled $container.resources }}
          resources:
            {{- toYaml $container.resources | nindent 12 }}
          {{- else }}
          resources: {}
          {{- end }}
          {{- if or $.app.configFiles $.app.volumes }}
          volumeMounts:
            {{- if and $.app.configFilesEnabled $.app.configPath $.app.configFiles}}
            - name: application-config
              mountPath: {{ $.app.configPath }}
            {{- end }}
            {{- if $.app.volumesEnabled }}
            {{- range $name, $volume := $.app.volumes }}
            - name: {{ $volume.name }}
              mountPath: {{ $volume.mountPath }}
            {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- if or .app.configFiles .app.volumes}}
      volumes:
        {{- if and .app.configFilesEnabled .app.configFiles}}
        - name: application-config
          configMap:
            name: {{ .app.name }}
        {{- end }}
        {{- if .app.volumesEnabled }}
        {{- range $name, $volume := .app.volumes }}
        - name: {{ $volume.name }}
          {{- if eq $volume.type "PersistentVolume"}}
          persistentVolumeClaim:
            claimName: {{ $.app.name }}-{{ $volume.name }}
          {{- end }}
          {{- if eq $volume.type "Secret"}}
          secret:
            secretName: {{ $.app.name }}-{{ $volume.secretName }}
          {{- end }}
          {{- if eq $volume.type "EmptyDir"}}
          emptyDir:
            sizeLimit: {{ $volume.size }}
          {{- end }}
        {{- end }}
        {{- end }}
      {{- end }}
  {{- end -}}
